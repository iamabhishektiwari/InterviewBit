Given an array of real numbers greater than zero in form of strings.
Find if there exists a triplet (a,b,c) such that 1 < a+b+c < 2 . 
Return 1 for true or 0 for false.

Example:

Given [0.6, 0.7, 0.8, 1.2, 0.4] ,

You should return 1

as

0.6+0.7+0.4=1.7

1<1.7<2

Hence, the output is 1.

O(n) solution is expected.

Note: You can assume the numbers in strings donâ€™t overflow the primitive data type and there are no leading zeroes in numbers. Extra memory usage is allowed.

Solution


int Solution::solve(vector<string> &p) {
    vector<double> arr;
    for(int i=0;i<p.size();i++){
        arr.push_back(stod(p[i]));
    }
    if(arr.size()<3)
    return 0;
    
    double a=arr[0],b=arr[1],c=arr[2];
    
    for(int i=3;i<arr.size();i++){
        if (a + b + c < 2 && a + b + c > 1)
            return 1;
        else if (a + b + c > 2) {
            if (a > b && a > c)
                a = arr[i];
            else if (b > a && b > c)
                b = arr[i];
            else
                c = arr[i];
        } else {
            if (a < b && a < c)
                a = arr[i];
            else if (b < a && b < c)
                b = arr[i];
            else
                c = arr[i];
        }
    }
    if (a + b + c > 1 && a + b + c < 2)
        return 1;
    else
        return 0;
    
}
